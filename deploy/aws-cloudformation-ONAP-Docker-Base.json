{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Template to launch an Ubuntu Linux instance running ONAP in Docker Containers.",
  "Parameters": {
    "InstanceType": {
      "Type": "String",
      "Default": "r4.16xlarge",
      "AllowedValues": [
        "r4.2xlarge",
	"r4.16xlarge",
	"g3.4xlarge"
      ],
      "Description": "Only default r4.2xlarge will be allowed"
    },
    "KeyName": {
      "Type": "String",
      "Default": "generic-cloud-wk",
      "Description": "Enter the key pair name that you want associated with this instance. Note: Name is required"
    },
    "AnsibleRepository": {
      "Type": "String",
      "Default": "https://github.com/moffzilla/ONAP",
      "Description": "The git repository of Ansible playbooks"
    },
    "AnsiblePlaybook": {
      "Type": "String",
      "Default": "deploy/ap_onap.yml",
      "Description": "The Ansible playbook to use"
    },
    "OOMTemplate": {
      "Type": "String",
      "Default": "test.cfg.j2",
      "Description": "The OOM Template for deploying demo or minimal implementations"
    }
  },
  "Mappings": {
      "RegionMap" : {
          "us-east-1"      : { "AMI" : "ami-1d4e7a66" }
      }
  },
  "Resources": {
    "Ec2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId":  {"Fn::FindInMap":["RegionMap", {"Ref" : "AWS::Region" }, "AMI" ]},
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups": [ { "Ref": "dockerONAP" } ],
        "UserData": {
          "Fn::Base64": { "Fn::Join": [ "", [
            "#!/bin/bash\n",
            "sudo apt-add-repository ppa:ansible/ansible -y \n",
            "sudo apt-get update -y\n",
            "sudo apt-get install -y ansible git\n",
            "echo \"localhost ansible_connection=local\" > /etc/ansible/hosts\n",
	    "sudo sh -c 'sed -i -e 's/#log_path/log_path/g' /etc/ansible/ansible.cfg'\n",
            "# sudo ansible-pull -U ", {"Ref": "AnsibleRepository"}," ",{"Ref": "AnsiblePlaybook"},"\n",
	    "sudo ansible-pull -U ", {"Ref": "AnsibleRepository"}," ","-e"," ","config=",{"Ref": "OOMTemplate"}," ",{"Ref": "AnsiblePlaybook"}," ","-vvvv"," ","\n"
              ]
            ]
          }
        }
      }
    },
"NewVolume" : {
      "Type" : "AWS::EC2::Volume",
      "Properties" : {
         "Size" : "256",
         "AvailabilityZone" : { "Fn::GetAtt" : [ "Ec2Instance", "AvailabilityZone" ] }
      }
   },
   "MountPoint" : {
    "Type" : "AWS::EC2::VolumeAttachment",
    "Properties" : {
       "InstanceId" : { "Ref" : "Ec2Instance" },
       "VolumeId"  : { "Ref" : "NewVolume" },
       "Device" : "/dev/sdh"
    }
 },
   
    
"dockerONAP": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable tcp access for Web and SSH traffic from outside",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }
  },
  "Outputs": {
    "InstanceId": {
      "Description": "Instance ID of the Web Server",
      "Value": {
        "Ref": "Ec2Instance"
      }
    },
    "AZ": {
      "Description": "Instances is running in Availability Zone ",
      "Value": {
        "Fn::GetAtt": [
          "Ec2Instance",
          "AvailabilityZone"
        ]
      }
    },
    "PublicIP": {
      "Description": "Public IP",
      "Value": {
        "Fn::GetAtt": [
          "Ec2Instance",
          "PublicIp"
        ]
      }
    },
    "PublicDNS": {
      "Description": "Instance Public DNS Name",
      "Value": {
        "Fn::GetAtt": [
          "Ec2Instance",
          "PublicDnsName"
        ]
      }
    }
  }
}
