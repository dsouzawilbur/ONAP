# For information regarding those parameters, please visit http://onap.readthedocs.io/en/latest/submodules/dcaegen2.git/docs/sections/installation_heat.html

#################
# COMMON CONFIG #
#################

# NEXUS
NEXUS_HTTP_REPO: https://nexus.onap.org/content/sites/raw
NEXUS_DOCKER_REPO: nexus3.onap.org:10001
NEXUS_USERNAME: docker
NEXUS_PASSWORD: docker

# ONAP config
# Do not change unless you know what you're doing
DMAAP_TOPIC: "AUTO"
DEMO_ARTIFACTS_VERSION: "1.1.1"

# ------------------------------------------------#
# OpenStack Config on which VNFs will be deployed #
# ------------------------------------------------#

# The four below parameters are only used by Robot.
# As Robot is able to perform some automated actions,
# e.g. onboard/distribute/instantiate, it has to be
# configured with four below parameters (in addition
# to the OPENSTACK ones).
# If you don't intend to use Robot for those actions,
# you can put dummy values, but you will have to provide
# those values when deploying VNF anyway.
# --------------------------------------------------
# This is the OAM Network ID used for internal network by VNFs.
# You could create 10.10.10.0/24 (256 IPs should be enough) in your cloud instance.
# random
OPENSTACK_OAM_NETWORK_ID: "d4769dfb-c9e4-4f72-b3d6-1d18f4ac4ee6"
# This is the public Network ID. Public = external network in OpenStack.
# Floating IPs will be created and assigned to VNFs from this network,
# to provide external reachability.
# external
OPENSTACK_PUBLIC_NETWORK_ID: "971040b2-7059-49dc-b220-4fab50cb2ad4"
# VM Flavor to be used by VNF.
OPENSTACK_FLAVOR: "m1.medium"
# VM image to be used by VNF. Here ubuntu 14.04 is provided.
OPENSTACK_IMAGE: "ubuntu-16-04-cloud-amd64"

OPENSTACK_USERNAME: user
OPENSTACK_PASSWORD: password
OPENSTACK_TENANT_NAME: "1035021"
OPENSTACK_TENANT_ID: "1035021"
OPENSTACK_REGION: "RegionOne"
# Either v2.0 or v3
OPENSTACK_API_VERSION: "v2.0"
OPENSTACK_KEYSTONE_URL: "https://identity.api.rackspacecloud.com"
# Don't change this if you don't know what it is
OPENSTACK_SERVICE_TENANT_NAME: "service"

########
# DCAE #
########

# Whether or not to deploy DCAE
# If set to false, all the parameters below can be left empty or removed
# If set to false, update ../dcaegen2/values.yaml disableDcae value to true,
# this is to avoid deploying the DCAE deployments and services.
DEPLOY_DCAE: "true"

# DCAE Config
DCAE_DOCKER_VERSION: v1.1.1
DCAE_VM_BASE_NAME: "dcae"

# ------------------------------------------------#
# OpenStack Config on which DCAE will be deployed #
# ------------------------------------------------#

# Whether to have DCAE deployed on the same OpenStack instance on which VNF will be deployed.
# (e.g. re-use the same config as defined above)
# If set to true, discard the next config block, else provide the values.
IS_SAME_OPENSTACK_AS_VNF: "true"

# Fill in the values in below block only if IS_SAME_OPENSTACK_AS_VNF set to "false"
# ---
# Either v2.0 or v3
# 20180204 commented to match "true" above
DCAE_OS_API_VERSION: ""
DCAE_OS_KEYSTONE_URL: ""
DCAE_OS_USERNAME: ""
DCAE_OS_PASSWORD: ""
DCAE_OS_TENANT_NAME: ""
DCAE_OS_TENANT_ID: ""
DCAE_OS_REGION: ""

# ---

# We need to provide the config of the public network here, because the DCAE VMs will be
# assigned a floating IP on this network so one can access them, to debug for instance.
# The ID of the public network.
DCAE_OS_PUBLIC_NET_ID: "971040b2-7059-49dc-b220-4fab50cb2ad4"
# The name of the public network.
DCAE_OS_PUBLIC_NET_NAME: "external"
# This is the private network that will be used by DCAE VMs. The network will be created during the DCAE boostrap process,
# and will the subnet created will use this CIDR.
DCAE_OS_OAM_NETWORK_CIDR: "10.99.0.0/27"
# This will be the private ip of the DCAE boostrap VM. This VM is responsible for spinning up the whole DCAE stack (14 VMs total - but some have ips like 19 above the 28 cidr range)
DCAE_IP_ADDR: "10.99.0.3"

# The flavors' name to be used by DCAE VMs
DCAE_OS_FLAVOR_SMALL: "m1.small"
DCAE_OS_FLAVOR_MEDIUM: "m1.medium"
DCAE_OS_FLAVOR_LARGE: "m1.large"
# The images' name to be used by DCAE VMs
DCAE_OS_UBUNTU_14_IMAGE: "Ubuntu_14.04.5_LTS"
DCAE_OS_UBUNTU_16_IMAGE: "Ubuntu_16.04.2_LTS"
# check
DCAE_OS_CENTOS_7_IMAGE: "CentOS-7"

# This is the keypair that will be created in OpenStack, and that one can use to access DCAE VMs using ssh.
# The private key needs to be in a specific format so at the end of the process, it's formatted properly
# when ending up in the DCAE HEAT stack. The best way is to do the following:
# - copy paste your key
# - surround it with quote
# - add \n at the end of each line
# - escape the result using https://www.freeformatter.com/java-dotnet-escape.html#ad-output
DCAE_OS_KEY_NAME: "onap_key"
DCAE_OS_PUB_KEY: "ssh-rsa AAAAB3dfdfdjkdljfldkjfldkjflkdsjflkdsjfklds1eimeh obrien@public"

DCAE_OS_PRIVATE_KEY: \"-----BEGIN RSA PRIVATE KEY-----\\n\r\nMfdjsklfjdslkfjdslkfjsdlfdsjlkVuE\\n\r\nJ2DdPtwFn7+zZg8PIMViDDTWBL7QyIQa4CfFFGUcd1lv3AmN2l8sCA==\\n\r\n-----END RSA PRIVATE KEY-----\\n\r\n\"



# This below settings allows one to configure the /etc/resolv.conf nameserver resolution for all the DCAE VMs.
# -
# In the HEAT setup, it's meant to be a DNS list, as the HEAT setup deploys a DNS Server VM in addition to DNS Designate
# and this DNS Server is setup to forward request to the DNS Designate backend when it cannot resolve, hence the
# DNS_FORWARDER config here. The DCAE Boostrap requires both inputs, even though they are now similar, we have to pass
# them.
# -
# ATTENTION: Assumption is made the DNS Designate backend is configure to forward request to a public DNS (e.g. 8.8.8.8)
# -
# Put the IP of the DNS Designate backend (e.g. the OpenStack IP supporting DNS Designate)
# sorry no designate on rackspace - DCAEGEN2 will not work - these are only stubs
DNS_IP : "8.8.8.8"
DNS_FORWARDER: "8.8.8.8"

# Public DNS - not used but required by the DCAE boostrap container
EXTERNAL_DNS: "8.8.8.8"

# DNS domain for the DCAE VMs
DCAE_DOMAIN: "dcaeg2.michaelobrien.logging.amsterdam.onap.org"

# Proxy DNS Designate. This means DCAE will run in an instance not support Designate, and Designate will be provided by another instance.
# Set to true if you wish to use it
DNSAAS_PROXY_ENABLE: "true"
# Provide this only if DNSAAS_PROXY_ENABLE set to true. The IP has to be the IP of one of the K8S hosts.
DCAE_PROXIED_KEYSTONE_URL: "http://10.12.5.81/api/multicloud-titanium_cloud/v0/pod25_RegionOne/identity/v2.0"

# -----------------------------------------------------#
# OpenStack Config on which DNS Designate is supported #
# -----------------------------------------------------#

# If this is the same OpenStack used for the VNF or DCAE, please re-enter the values here.

DNSAAS_API_VERSION: "v3"
DNSAAS_REGION: "IAD"
DNSAAS_KEYSTONE_URL: "https://identity.api.rackspacecloud.com"
DNSAAS_TENANT_ID: "1035021"
DNSAAS_TENANT_NAME: "1035021"
DNSAAS_USERNAME: demo
DNSAAS_PASSWORD: onapdemo
